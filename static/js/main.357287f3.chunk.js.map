{"version":3,"sources":["components/modal/modal.styles.js","components/modal/modal.js","components/gridPhotos/gridPhotos.styles.js","components/gridPhotos/gridPhotos.js","services/getData.js","components/album/album.styles.js","components/album/album.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","position","top","left","width","backgroundColor","title","marginLeft","marginRight","imgWrapper","height","objectFit","circularProgress","transform","Transition","React","forwardRef","props","ref","Slide","direction","Modal","modalIsOpen","handleCloseModal","img","classes","imgName","useState","imgIsLoaded","setImgIsLoaded","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","className","Toolbar","IconButton","edge","color","onClick","aria-label","Typography","variant","id","src","url","alt","onLoad","CircularProgress","container","marginTop","spacing","marginBottom","grid","GridPhotos","albums","photos","handleOpenModal","map","album","index","key","component","filter","photo","albumId","thumbnailUrl","bind","userId","a","axios","get","then","res","data","albumsId","Set","add","paramsForPhotos","reduce","acc","curr","console","log","resp","catch","formControl","margin","minWidth","display","flexDirection","justifyContent","alignContent","alignItems","selectEmpty","button","maxWidth","Album","users","user","setUser","setAlbums","setPhotos","userIsChange","setUserIsChange","setImg","setModalIsOpen","Container","FormControl","Autocomplete","options","getOptionLabel","option","email","onChange","event","newValue","style","renderInput","params","TextField","label","Button","findIndex","element","getUserAlbumsPhotos","disabled","App","setUsers","useEffect","getUsers","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.357287f3.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        backgroundColor: 'rgba(0,0,0, 0.6)'\n    },\n    title: {\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    imgWrapper: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0,0,0, 0)',\n\n        '& img': {\n            width: '100%',\n            height: '100%',\n            objectFit: 'contain',\n        }\n    },\n    circularProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%; -50%)'\n    }\n}));","import React, {useState} from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport './modal.scss'\nimport Typography from '@material-ui/core/Typography';\nimport {useStyles} from './modal.styles'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction Modal({modalIsOpen, handleCloseModal, img, imgName}) {\n    const classes = useStyles();\n\n    const [imgIsLoaded, setImgIsLoaded] = useState(true);\n\n    function handleOnload() {\n        setImgIsLoaded(false);\n    }\n\n    return (\n        <>\n            <Dialog fullScreen open={modalIsOpen} onClose={handleCloseModal} TransitionComponent={Transition} >\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleCloseModal} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n\n                        <Typography variant=\"p\" color=\"initial\" className={classes.title}>{img.id}.- {img.title}</Typography>\n                    </Toolbar>\n                </AppBar>\n                <div className={classes.imgWrapper} onClick={handleCloseModal}>\n                    <img src={img.url} alt={img.title} onLoad={handleOnload}/>\n                    {imgIsLoaded &&\n                        <CircularProgress className={classes.circularProgress} color=\"secondary\"/>\n                    }\n                </div>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Modal\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: theme.spacing(2)\n    },\n    title: {\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(2),\n        color: 'rgb(102,102,102)'\n    },\n    grid: {\n        marginTop: theme.spacing(2)\n    }\n}));","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport './gridPhotos.scss';\nimport { useStyles } from './gridPhotos.styles';\n\nfunction GridPhotos({albums, photos, handleOpenModal}) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            {albums.map((album, index)=>(\n                <div key={index}>\n                    <Typography className={classes.title} variant=\"h5\" component=\"h2\">{album.id}.- {album.title}</Typography>\n                    <div className='photos-container'>\n                        {photos.filter((photo)=>photo.albumId === album.id).map((photo,index)=>(\n                            <div key={index}>\n                                <img alt={photo.title} src={photo.thumbnailUrl} onClick={handleOpenModal.bind(null, photo )}/>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default GridPhotos\n","import axios from 'axios';\n\nexport async function getUserAlbumsPhotos(userId) {\n\n    const albums = await axios.get(`https://jsonplaceholder.typicode.com/albums?userId=${userId}`).then(res=>res.data);\n    const albumsId = new Set();\n    \n    for (const album of albums) {\n        albumsId.add(album.id);\n    }\n    \n    const paramsForPhotos = [...albumsId].reduce((acc, curr, index)=>{\n        if(index === 0)     acc += `?albumId=${curr}`;\n        else                acc += `&albumId=${curr}`;\n        \n        return acc;\n    }, '');\n\n    \n    const photos = await axios.get(`https://jsonplaceholder.typicode.com/photos${paramsForPhotos}`).then(res=>res.data);\n\n    console.log({\n        albums,\n        photos\n    })\n    \n    return {\n        albums,\n        photos,\n    }\n}\n\nexport async function getUsers() {\n    return await axios.get('https://jsonplaceholder.typicode.com/users')\n        .then((resp) => resp.data)\n        .catch(() => {})\n    ;   \n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    album: {\n        marginTop: theme.spacing(4)\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    button: {\n        maxWidth: '300px',\n        width: \"100%\",\n        marginTop: theme.spacing(1),\n    },\n}));","import React, {useState } from 'react';\nimport Modal from 'components/modal';\nimport GridPhotos from 'components/gridPhotos'\nimport {getUserAlbumsPhotos} from 'services/index';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {useStyles} from './album.styles';\n\nfunction Album(props) {\n    const classes = useStyles();\n\n    const {users} = props;\n    const [user, setUser] = useState('');\n    const [albums, setAlbums] = useState([]);\n    const [photos, setPhotos] = useState([]);\n    const [userIsChange, setUserIsChange] = useState(false);\n\n    // Modal States\n    const [img, setImg] = useState({});\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    \n    function handleSearch() {\n        if (userIsChange) {\n            setAlbums([]);\n            setPhotos([]);\n            console.log(users)\n\n            if (users.findIndex(element => element.id === user.id) !== -1) {\n                getUserAlbumsPhotos(user.id).then((res) => {\n                    setAlbums(res.albums);\n                    setPhotos(res.photos);\n                })\n            }\n            \n            setUserIsChange(false);\n        }\n    }\n\n    function handleOpenModal(img) {\n        setImg(img);\n        setModalIsOpen(true);\n    }\n    \n    function handleCloseModal() {\n        setModalIsOpen(false)\n    }\n\n    return (\n        <div className={classes.album}>\n            <Container maxWidth=\"md\">\n                <FormControl className={classes.formControl}>\n                    <Autocomplete\n                        id=\"select-user\"\n                        options={users}\n                        getOptionLabel={(option) => option.email}\n                        onChange={(event, newValue) => {\n                            if(user?.id !== newValue?.id) {\n                                setUserIsChange(true);\n                            }\n\n                            if(newValue === null) {\n                                setUserIsChange(false);\n                            }\n                            setUser(newValue);\n                            console.log(newValue)\n                        }}\n                        style={{ maxWidth: '300px',width: \"100%\", }}\n                        renderInput={(params) => <TextField {...params} label=\"Usuario\" variant=\"outlined\" />}\n                    />\n\n                    <Button onClick={handleSearch} disabled={!userIsChange} className={classes.button} color=\"primary\" variant=\"contained\">\n                        Buscar Álbumes de Usuario\n                    </Button>\n                </FormControl>\n                        \n                <GridPhotos {...{albums, photos, handleOpenModal}}/>\n            </Container>\n\n            <Modal {...{handleCloseModal, img, modalIsOpen}}/>\n        </div>\n    )\n}\n\nexport default Album\n","import React, {useEffect, useState} from 'react';\nimport Album from './components/album'\nimport {getUsers} from 'services';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n  const [users, setUsers] = useState({});\n\n  useEffect(function retrieveUsers() {\n    getUsers().then(res => {\n      setUsers(res);\n    })\n  }, []);\n  \n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <Album {...{users}}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}